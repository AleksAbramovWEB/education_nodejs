<script>

    // console.log('Request data')
    //
    // setTimeout(() => {
    //     console.log('Preparing data...')
    //
    //     const backendData = {
    //         server: 'aws',
    //         port: 2000,
    //         status: 'working'
    //     }
    //
    //     setTimeout(()=>{
    //         console.log('Data received', backendData)
    //     })
    //
    // }, 2000)

    const p = new Promise((resolve, reject) => {
        console.log('Request data')
        setTimeout(() => {
            console.log('Preparing data...')

            const backendData = {
                server: 'aws',
                port: 2000,
                status: 'working'
            }
            resolve(backendData)// промис заверщил свое выполнение

        }, 2000)
    }).then(data => {
        return  new Promise((resolve, reject) => {
                setTimeout(()=>{
                    data.modified = true
                    resolve(data)
                    // reject(data) сообщение отб ошибке
                }, 2000)
        })
    }).then(data => {
        console.log('Data received', data)
        data.modified = false
        return data
    }).then(data => {
        console.log('Data modified', data)
    }).catch(err => console.error('Error', err))
    .finally(() => console.log('finally')) // выводится всега

    const sleep = ms => {
        return new Promise(resolve => {
            setTimeout(() => resolve(), ms)
        })
    }

    sleep(2000).then(() => console.log('after 2 sec'))

    Promise.all([sleep(2000), p]).then(() => {
        console.log('все промисы выполнены')
    })

    Promise.race([sleep(2000), p]).then(() => {
        console.log('выполнился первый Promise')
    })


</script>